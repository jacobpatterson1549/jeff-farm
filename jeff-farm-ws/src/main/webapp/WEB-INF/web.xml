<web-app version="3.0"
		 xmlns="http://java.sun.com/xml/ns/javaee"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_0.xsd">

	<servlet>
		<servlet-name>${servlet.name}</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>com.github.ants280.jeff.farm.ws.ApplicationConfig</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>${servlet.name}</servlet-name>
		<url-pattern>${servlet.url.prefix}/*</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
		<init-param>
			<param-name>cors.allowed.origins</param-name>
			<!--allowing ui on same server as tomcat, but on different port-->
			<param-value>${site.origin}</param-value>
		</init-param>
		<init-param>
			<!--allow non-default PUT and DELETE methods-->
			<param-name>cors.allowed.methods</param-name>
			<param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE</param-value>
		</init-param>
		<init-param>
			<!--make requests with credentials-->
			<param-name>cors.support.credentials</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<!--The amount of seconds, browser is allowed to cache the result of the pre-flight request.-->
			<param-name>cors.preflight.maxage</param-name>
			<param-value>10</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<resource-ref>
		<res-ref-name>${resource.data.source.name}</res-ref-name>
		<res-type>${resource.data.source.type}</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>unsecured-endpoints</web-resource-name>
			<url-pattern>${servlet.url.prefix}/</url-pattern>
			<url-pattern>${servlet.url.prefix}/login/*</url-pattern>
		</web-resource-collection>
	</security-constraint>

	<security-constraint>
		<display-name>Deny all HTTP methods except those needed for crud</display-name>
		<web-resource-collection>
			<url-pattern>${servlet.url.prefix}/*</url-pattern>
			<http-method-omission>POST</http-method-omission>
			<http-method-omission>GET</http-method-omission>
			<http-method-omission>PUT</http-method-omission>
			<http-method-omission>DELETE</http-method-omission>
			<http-method-omission>OPTIONS</http-method-omission>
		</web-resource-collection>
		<auth-constraint/>
	</security-constraint>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>secured-endpoints</web-resource-name>
			<url-pattern>${servlet.url.prefix}/*</url-pattern>
			<http-method>GET</http-method>
		</web-resource-collection>
		<auth-constraint>
			<role-name>*</role-name> <!-- user must be logged in -->
		</auth-constraint>
	</security-constraint>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>secured-endpoints-modify</web-resource-name>
			<url-pattern>${servlet.url.prefix}/*</url-pattern>
			<http-method>POST</http-method>
			<http-method>PUT</http-method>
			<http-method>DELETE</http-method>
		</web-resource-collection>
		<auth-constraint>
			<role-name>${security.role.user}</role-name>
		</auth-constraint>
	</security-constraint>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>admin-endpoints</web-resource-name>
			<url-pattern>${servlet.url.prefix}/user/list</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>${security.role.admin}</role-name>
		</auth-constraint>
	</security-constraint>

	<security-role>
		<role-name>${security.role.user}</role-name>
		<role-name>${security.role.admin}</role-name>
		<role-name>${security.role.demo}</role-name>
	</security-role>

	<session-config>
		<tracking-mode>URL</tracking-mode>
	</session-config>

</web-app>
